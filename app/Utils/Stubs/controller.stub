<?php

namespace App\Http\Controllers\Backend\AutoGenerate;

use App\Http\Controllers\Controller;
use App\Utils\Helpers\CRUDHelper;
use App\Models\AutoGenerate\$controller;
use App\Models\AutoGenerate\$controllerPhoto;
use App\Models\AutoGenerate\$controllerTranslation;
use Exception;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use App\Utils\Traits\GeneralTrait;

class $controllerController extends Controller
{
    use GeneralTrait;
    public function index()
    {
        check_permission('$name index');
        $$names = $controller::with('photos')->get();
        return view('backend.$name.index', get_defined_vars());
    }

    public function create()
    {
        check_permission('$name create');
        return view('backend.$name.create', get_defined_vars());
    }

    public function store(Request $request)
    {
        try {
            check_permission('$name create');

            $$name = new $controller();

            $this->fill$controllerAttributes($$name, $request);

            $$name->save();

            $this->updateOrSave$controllerTranslations($$name, $request);

            $this->uploadNewPhotos($$name, $request, 'AutoGenerate\$controllerPhoto', '$name');

            alert()->success(__('messages.success'));
            return redirect(route('backend.$name.index'));
        } catch (Exception $e) {
            alert()->error($e->getMessage());
            return redirect(route('backend.$name.index'));
        }
    }

    public function edit(string $id)
    {
        check_permission('$name edit');
        $$name = $controller::where('id', $id)->with('photos')->first();
        return view('backend.$name.edit', get_defined_vars());
    }
    public function update(Request $request, string $id)
    {
        try {
            check_permission('$name edit');

            $$name = $controller::findOrFail($id);

            DB::transaction(function () use ($request, $$name) {
                $this->fill$controllerAttributes($$name, $request);

                $this->uploadNewPhotos($$name, $request, 'AutoGenerate\$controllerPhoto', '$name');

                $this->updateOrSave$controllerTranslations($$name, $request);

                $$name->save();
            });

            alert()->success(__('messages.success'));
            return redirect()->back();
        } catch (Exception $e) {
            alert()->error($e->getMessage());
            return redirect()->back();
        }
    }

    private function fill$controllerAttributes($controller $$name, Request $request)
    {
        if ($request->hasFile('photo')) {
            $$name->photo = upload('$name', $request->file('photo'));
        }
        $$name->slug = $request->slug;
    }

    private function updateOrSave$controllerTranslations($controller $$name, Request $request)
    {
        foreach (active_langs() as $lang) {
            $translation = $$name->translate($lang->code);

            if (!$translation) {
                $translation = new $controllerTranslation();
                $translation->locale = $lang->code;
                $translation->$name = $$name->id;
            }

            $translation->name = $request->name[$lang->code];
            $translation->description = $request->description[$lang->code];
            $translation->meta_title = $request->meta_title[$lang->code];
            $translation->short_description = $request->short_description[$lang->code];
            $translation->meta_description = $request->meta_description[$lang->code];
            $translation->alt = $request->alt[$lang->code];
            $translation->save();
        }
    }

    public function status(string $id)
    {
        check_permission('$name edit');
        return CRUDHelper::status('\App\Models\AutoGenerate\$controller', $id);
    }

    public function delete(string $id)
    {
        check_permission('$name delete');
        return CRUDHelper::remove_item('\App\Models\AutoGenerate\$controller', $id);
    }
}
